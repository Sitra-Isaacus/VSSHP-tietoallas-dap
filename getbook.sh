#!/bin/bash

# Compile Markdown files into a pdf "book"
#
# Author: Arho Virkki
# Date:   2017-09-13


# Generate several empty folders if they are missing
mkdir -p images book/{chapters,errors}

# Make symbolic links to images
for img in $( find . -wholename "*/*/images/*" )
do
  ln -sf "."$img ./images
done

if [ $# -lt 1 ]
then 
  echo
  echo "# Convert Wiki into a PDF book"
  echo "#"
  echo "# To compile as single chapter, issue e.g."
  echo "#   "$0" servers/gradient.md"
  echo "#"
  echo "# To compile and bind a full book, issue"
  echo "#   "$0" compile-all"
  echo "#   "$0" bind"
  echo "#"
  echo "# To clear cache, issue"
  echo "#   "$0" clear"
  echo
  exit 0
fi

if [ "$1" == "bind" ]
then
  # Delete broken pdf files (with size 0) that might be generated by
  # broken Markdown sources
  #rm -f $( find . -maxdepth 1  -type f -size 0 -name "*.pdf" )

  # Build the book from individual chapters
  bookname=cci_book.pdf

  pdftk book/static/{cover,license}.pdf $( ls book/chapters/*.pdf) \
    cat output book/$bookname

  echo "Build /book/"$bookname
  exit 0
fi

if [ "$1" == "clear" ]
then
  echo "Cleaning book/chapters/"
  rm -f book/chapters/*
  exit 0
fi

if [ "$1" == "compile-all" ]
then
  # List all candidate markdown files
  mdfiles=$( tree -fi | grep -e md$ )
else
  mdfiles="$1"
fi

# Pandoc command
pandoc_cmd='pandoc --latex-engine=xelatex '\
'--listings -H book/header.tex '\
'-s -V geometry:margin=2cm '\
'--variable=fontsize:11pt '\
' --variable=papersize:a4 '

echo "Generating pages..."
for f in $mdfiles 
do 

  # Sanitize names and change 'Home' into '00_Home' to make it 
  # appear first on the list
  outfile=$( echo $f | perl -pe \
    's/\//_/g,s/^\.//g,s/^_//g,s/md$/pdf/g,s/Home\./00_Home\./g' )

  if [ ! -f "book/chapters/"$outfile ]
  then
    echo "Compiling book/chapters/"$outfile
    $pandoc_cmd $f -o "book/chapters/"$outfile
  fi

  if [ $? != 0 ]
  then
    # Re-run the previous failded command with --verbose flag
    # to inspect the cause of the error
    $pandoc_cmd --verbose $f -o $outfile &> "book/errors/"$outfile"_errors"
  fi
done
